"activo(adulto,si)."
"activo(arl,no)."
"activo(estampilla,no)."
"activo(pension,no)."
"activo(procultura,si)."
"activo(reteica,si)."
"activo(salud,no)."
"adulto_mayor(2016, 0.02)."
"adulto_mayor(2017,0.02)."
"adulto_mayor(2018,0.02)."
"adulto_mayor(2019,0.02)."
"afectacion_seguridad(incapacidad_general)."
"aplica_deduccion_retencion(239)."
"aplica_deduccion_retencion(290)."
"aplica_deduccion_retencion(291)."
"aplica_ingreso_retencion(11)."
"aplica_ingreso_retencion(111)."
"aplica_ingreso_retencion(1174)."
"aplica_ingreso_retencion(1175)."
"aplica_ingreso_retencion(129)."
"arl(2016,1,0.522)."
"arl(2017,1,0.522)."
"arl(2018,1,0.522)."
"arl(2019,1,0.522)."
"base_estampillas(B,BE):- BE is B."
"base_minimo(B,V,A):- salario_minimo(V,Z), X is B*0.40, (X@=<Z -> A is Z; A is X)."
"base_retefuente(B, R) :- X is (B * 0.25 rnd 0),R is B-X."
"base_reteica(B, V, R) :- regla_general_salud(si,B,V,VS),  regla_general_pension(si,B,V,VP), M is (VS+VP), T is B- M, (T@=<0 -> R is 0; R is T)."
"calcular_adulto_mayor(I,P,R) :- activo(adulto,si), valor_pago(I,P,SB), base_estampillas(SB,X)  , adulto_mayor(P, RA) , R is ((RA * X) rnd 0)."
"calcular_arl(I,P,T) :- activo(arl,si),estado_pago(2),valor_pago(I,P,SB),arl(P,1,PARL), X is ((PARL/100)* (SB * 0.40) rnd 0), Y is ((X + 50)/ 100 int 0), T is Y * 100."
"calcular_estampilla(I,P,T) :- activo(estampilla,si), valor_pago(I,P,SB), base_estampillas(SB,X) , estampilla(P, RE) , T is ((RE * X) rnd 0)."
"calcular_ibc(C,V):- periodo(P),salario_minimo(P,SM),dias_liquidados(C,DL),concepto_ibc(X,activo), sumar_ibc(X,Y), A is (Y * 0.40), (A @>= SM -> V is A; V is (SM * DL) / 30)."
"calcular_pension(I,P,T) :-activo(pension,si),pensionado(no), estado_pago(2),valor_pago(I,P,SB),pension(P,PS), salario_minimo(P,SM), BA is (SB * 0.40 rnd 0), (BA @>= SM -> T is (BA * (PS/100)) approach 100;  T is (SM * (PS/100)) approach 100).
"calcular_pension_retencion(si,B,V,VP) :- pension(V, PP), X is (B * (PP/100) rnd 0), Y is ((X+50) / 100 int 0), VP is Y * 100."
"calcular_procultura(I,P,R) :- activo(procultura,si), valor_pago(I,P,SB), base_estampillas(SB,X) , procultura(P, RP) , R is ((RP * X) rnd 0)."
"calcular_reteica(I,P,T):- activo(reteica,si), valor_pago(I,P,SB),base_reteica(SB,P,X), reteica(P,RI), T is ((RI * X) / 1000 rnd 0)."
"calcular_salud(I,P,T) :- activo(salud,si),valor_pago(I,P,SB),salud(P,PS), salario_minimo(P,SM), BA is (SB * 0.40 rnd 0), (BA @>= SM -> T is (BA * (PS/100)) approach 100;  T is (SM * (PS/100)) approach 100).
"calcular_salud_retencion(si,B,V,VS) :- salud(V,PS), X is (B * (PS/100) rnd 0), Y is ((X+50) / 100 int 0), VS is Y * 100."
"concepto(prueb, devengo, fijo, s, 1000000, 2017)."
"concepto(prueb, devengo, fijo, s, 1000000, 2018)."
"concepto(prueb, devengo, fijo, s, 1000000, 2019)."
"dias_liquidados(prueba,30)."
"estampilla(2016, 0.01). "
"estampilla(2017,0.01)."
"estampilla(2018,0.01)."
"estampilla(2019,0.01)."
"evaluar_uvt(VU,U,R):- (U @> 150, U @=<360 -> A is U - 150, B is A*0.28, C is B * VU, D is (10 * VU), F is C + D, R is (F rnd 0))."
"evaluar_uvt(VU,U,R):- (U @> 360 -> A is U - 360, B is A*0.33, C is B * VU, D is (69 * VU), F is C + D, R is (F rnd 0)).  "
"evaluar_uvt(VU,U,R):- (U @=< 95 -> R is 0)."
"evaluar_uvt(VU,U,R):- (U @> 95, U@=<150 -> A is U - 95, B is A*0.19, C is B * VU, R is (C rnd 0))."
"info_concepto(X,T,P,N,R):- concepto(X,T,Y,N,Z,P), ((Y==fijo)->(R is Z))."
"info_concepto(X,T,P,N,R) :- concepto(X,T,Y,N,Z,P),((Y==porcentual)->(valor_pago(X,P,V),R is V * (Z/100)))."
"info_concepto(X,T,P,N,R) :- concepto(X,T,Y,N,Z,P),((Y==seguridad_social)->(R is 0))."
"liquidar_ct(X,P,adultoMayor,T):- calcular_adulto_mayor(X,P,T)."
"liquidar_ct(X,P,arl,T):- calcular_arl(X,P,T)."
"liquidar_ct(X,P,estampillaUD,T):- calcular_estampilla(X,P,T)."
"liquidar_ct(X,P,honorarios,T):- valor_pago(X,P,T)."
"liquidar_ct(X,P,pension,T):- calcular_pension(X,P,T)."
"liquidar_ct(X,P,proCultura,T):- calcular_procultura(X,P,T)."
"liquidar_ct(X,P,reteIca,T):- calcular_reteica(X,P,T)."
"liquidar_ct(X,P,salud,T):- calcular_salud(X,P,T)."
"pension(2016,16)."
"pension(2017,16)."
"pension(2018,16)."
"pension(2019,16)."
"procultura(2016,0.005)."
"procultura(2017,0.005)."
"procultura(2018,0.005)."
"procultura(2019,0.005)."
"regla_general_pension(si,B,V,VS) :-pensionado(no), pension(V,PS), salario_minimo(V,SM), BA is (B * 0.40 rnd 0), (BA @>= SM -> VS is (BA * (PS/100)) approach 100;  VS is (SM * (PS/100)) approach 100)."
"regla_general_salud(si,B,V,VS) :- salud(V,PS), salario_minimo(V,SM), BA is (B * 0.40 rnd 0), (BA @>= SM -> VS is (BA * (PS/100)) approach 100;  VS is (SM * (PS/100)) approach 100).
"reteica(2016, 9.66)."
"reteica(2017,9.66)."
"reteica(2018,9.66)."
"reteica(2019,9.66)."
"salario_minimo(2016, 689454)."
"salario_minimo(2017,737717)."
"salario_minimo(2018,781242)."
"salario_minimo(2019,828116)."
"salud(2016,12.5)."
"salud(2017,12.5)."
"salud(2018,12.5)."
"salud(2019,12.5)."
"seg_social(prueba,1,1,1,1,1,1)."
"valor_pago(X,V,P):-valor_contrato(X,Y),  duracion_contrato(X,D,V), R is Y / D, dias_liquidados(X,DL), P is ((DL * R) rnd 0)."
"valor_retencion(VR):- ingresos(B), periodo(P), base_retefuente(B,R), valor_uvt(P, VU), X is (R / VU), evaluar_uvt(VU, X, E), H is ((E + 50) / 1000 rnd 0), VR is (H * 1000)."
"valor_uvt(2016,29753)."
"valor_uvt(2017,31859)."
"valor_uvt(2018,33156)."
"valor_uvt(2019,34270)."
